"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.default = actionRecorder;
exports.getActions = getActions;

var _sessionStorage = require("./helpers/session-storage");

function actionRecorder(_ref) {
	var key = _ref.key;
	var transform = _ref.transform;
	var limit = _ref.limit;
	var reset = _ref.reset;

	var callCount = 0;
	return function (_ref2) {
		var getState = _ref2.getState;
		return function (next) {
			return function (action) {
				if (reset && !callCount) {
					(0, _sessionStorage.remove)({ key: key });
				}
				callCount += 1;
				var actions = [];
				var transformedAction = transform ? transform(action, getState) : action;
				var actionToStore = Object.keys(transformedAction).reduce(function (actionData, item) {
					actionData[item] = transformedAction[item];
					return actionData;
				}, {});
				actionToStore.timestamp = Date.now();
				try {
					actions = JSON.parse((0, _sessionStorage.get)({ key: key })) || [];
					actions.push(actionToStore);
				} catch (e) {
					actions.push(actionToStore);
				}
				if (limit && actions.length > limit) {
					actions = actions.slice(actions.length - limit, actions.length);
				}
				(0, _sessionStorage.set)({ key: key, data: JSON.stringify(actions) });
				next(action);
			};
		};
	};
}

function getActions(key) {
	return JSON.parse((0, _sessionStorage.get)({ key: key }));
}